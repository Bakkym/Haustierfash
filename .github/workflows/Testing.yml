name: Testing
on:
  pull_request:
    branches: [master]
    types: [opened, synchronize]
  push:
    branches: [master]
  workflow_dispatch:
  #schedule:
  #   # test on schedule using cron syntax
   # - cron: "0 * * * *" # every hour
jobs:
  UnitTest:
    runs-on: ubuntu-18.04
    environment: Testing
    env:
      working-directory: ./frontend
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: npm install --no-audit --no-fund --no-optional
      - name: build
        working-directory: ${{env.working-directory}}
        run: npm run build



  SmokeTest:
    runs-on: ubuntu-18.04
    environment: Testing
    env:
      working-directory: ./frontend
    steps:cd f
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: microsoft/playwright-github-action@v1

      - uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        working-directory: ${{env.working-directory}}
        run: npm install


      - name: Start local server
        working-directory: ${{env.working-directory}}
        run:  npm run start &  # npx wait-on http://localhost:3000

      - name: Start qawolf testing
        working-directory: ${{env.working-directory}}
        run: npx qawolf test --headless
        env:
          # configure tests with environment variables
          FFMPEG_PATH: /usr/bin/ffmpeg # for recording video
          QAW_ARTIFACT_PATH: ${{ github.workspace }}/artifacts
          # you can also use GitHub secrets for environment variables
          # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets
          # LOGIN_PASSWORD: ${{ secrets.PASSWORD }}
      
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: qawolf
          path: ${{ github.workspace }}/artifacts
  





